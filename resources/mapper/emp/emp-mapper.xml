<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emp">
	<select id="selectAllEmp" resultType="map">
		SELECT * FROM EMP
		ORDER BY EMP_ID
	</select>
	<select id="search1" resultType="map">
		SELECT * FROM EMP
		<!-- 
			데이터를 바인딩할 때 사용하는 표현법 #{value} -> 'abc'
			테이블명, 컬럼명을 표현할 때 사용하는 표현법 ${value} -> abc
			 -> 쿼리 인젝션 공격에 위험함
		 -->
		WHERE ${searchType} LIKE '%' || #{searchKeyword} || '%'
		ORDER BY EMP_ID
	</select>
	<select id="search2" resultType="map">
		SELECT * 
		FROM (SELECT 
			E.* , DECODE(SUBSTR(EMP_NO, 8, 1), '1', '남', '여') gender
			FROM EMP E
		) E2
		<!-- 
			where 태그 몸통 부분이 비어있다면 where 키워드 제거
			where 태그 내부에 AND나 OR로 시작하는 코드가 있다면 알아서 제거
		 -->
		<where>
			<if test="gender != null and gender != ''">
				GENDER = #{gender}
			</if>
			<if test="searchType != null and searchType != ''">
				AND ${searchType} LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="salary != null and salary != 0">
				<if test = "salaryCompare != null and salaryCompare !=''">
				<!-- 
					xml의 entity 문자를 문자 그대로 이스케이핑 하고자 할 때 사용하는 태그
					CDATA 태그
					<![CDATA[문자그대로 처리]]>
					
					vo클래스 보냈으면 getSalaryCompare() 호출하고
					map으로 보내서 자동으로 get("salaryCompare") 호출해줌
				 -->
					<choose>
						<when test="salaryCompare == 'ge'">
							AND SALARY >= #{salary}
						</when>
						<when test="salaryCompare eq 'le'">
							AND SALARY <![CDATA[<=]]> #{salary}
						</when>
						<otherwise></otherwise>
					</choose>
				</if>
			</if>
			<if test="hire_date != null and hire_date != ''">
				<if test="hiredateCompare != null and hiredateCompare != ''">
					<choose>
						<when test="hiredateCompare.equals('ge')">
							AND HIRE_DATE >= TO_DATE(#{hire_date}, 'yyyy-mm-dd')
						</when>
						<otherwise>
							AND HIRE_DATE <![CDATA[<=]]> #{hire_date}
						</otherwise>
						<!-- 오라클에서는 hire_date 문자열이여도 자동형변환 돼서 상관없음 -->
					</choose>
				</if>
			</if>
		</where>
	</select>
	<select id="selectJobList" resultType="map">
		SELECT JOB_CODE, JOB_NAME FROM JOB
	</select>
	<select id="search3" resultType="map">
		select *
        from (
        	select
            	e.*,
            	decode(substr(emp_no, 8, 1), '1', '남', '3', '남', '여') gender,
            	d.dept_title,
            	j.job_name
        	from
            	emp e
        	left join dept d
            	on e.dept_code = d.dept_id
        	left join job j
            	on e.job_code = j.job_code
        ) e
        <where>
        	<if test="jobCodeArr != null">
        		JOB_CODE IN
        		<!-- 
        			<foreach collection="배열" item="변수명" index="인덱스 번호 저장 변수" 
        			open="시작 시 넣을 문자" close="종료 시 넣을 문자" separator="구분자">
        		 -->
        		<foreach collection="jobCodeArr" item="jobCode" open="(" close=")" separator=",">
        			#{jobCode}
        		</foreach>
        	</if>
        </where>
	</select>
</mapper>